{"version":3,"sources":["etsy_db.js"],"names":["$","document","ready","etsyDB","init","Dexie","getDatabaseNames","databases","indexOf","createDB","db","open","create","version","stores","products","bins","console","log","addListing","listing","table","where","equals","listing_id","count","add","bin_id","title","categories","category_path","toString","price","created","creation_tsz","original_creation","original_creation_tsz","then","listTables","tables","forEach","i","name","deleteDB","transaction","exportNextTable","shift","toArray","a","result","push","tableName","contents","length","map","t","currentTransaction","getNewProducts","callback","data","getAllProducts","etsy","getBins"],"mappings":"AAAAA,EAAEC,UAAUC,MAAM,WACdF,EAAEG,UACFH,EAAEG,OAAOC,KAAO,WACZC,MAAMC,iBAAiB,SAASC,GACO,IAA/BA,EAAUC,QAAQ,UAAiBR,EAAES,WACpCT,EAAEU,GAAGC,UAIlBX,EAAEG,OAAOS,OAAS,WACdZ,EAAEU,GAAGG,QAAQ,GAAGC,QAERC,SAAU,gFACVC,KAAM,sBAGdC,QAAQC,IAAI,oBACZlB,EAAEU,GAAGC,QAGTX,EAAEG,OAAOgB,WAAa,SAASC,GAC3BpB,EAAEU,GAAGW,MAAM,YAAYC,MAAM,cAAcC,OAAOH,EAAQI,YAAYC,MAAM,SAASA,GACnE,IAAVA,GACAzB,EAAEU,GAAGW,MAAM,YAAYK,KACnBC,OAAQ,GACRH,WAAYJ,EAAQI,WACpBI,MAAOR,EAAQQ,MACfC,WAAYT,EAAQU,cAAcC,WAClCC,MAAOZ,EAAQY,MACfC,QAASb,EAAQc,aACjBC,kBAAmBf,EAAQgB,wBAC5BC,KAAK,WACJpB,QAAQC,IAAI,kBAAoBE,EAAQI,iBAQxDxB,EAAEG,OAAOmC,WAAa,WAClBtC,EAAEU,GAAG6B,OAAOC,QAAQ,SAAUnB,EAAOoB,GACjCxB,QAAQC,IAAI,SAAWuB,EAAI,KAAOpB,EAAMqB,SAIhD1C,EAAEG,OAAOwC,SAAW,WAChB3C,EAAEU,GAAFV,YAAcqC,KAAK,WACfpB,QAAQC,IAAI,uBAIpBlB,EAAEG,OAAFH,UAAkB,WACd,MAAOA,GAAEU,GAAGkC,YAAY,IAAK5C,EAAEU,GAAG6B,OAAQ,WAWtC,QAASM,KACL,GAAIxB,GAAQkB,EAAOO,OACnB,OAAOzB,GAAM0B,UAAUV,KAAK,SAASW,GAKjC,MAJAC,GAAOC,MACHC,UAAW9B,EAAMqB,KACjBU,SAAUJ,IAEPT,EAAOc,OAAS,EACnBR,IACAI,IAjBZ,GAAIV,GAASvC,EAAEU,GAAG6B,OAAOe,IAAI,SAAUC,GACnC,MAAOlD,OAAMmD,mBAAmBjB,OAAOgB,EAAEb,QAGzCO,IAEJ,OAAOJ,QAiBf7C,EAAEG,OAAOsD,eAAiB,SAASC,GAC/B1D,EAAEU,GAAGW,MAAM,YAAYC,MAAM,UAAUC,OAAO,IAAIwB,UAAUV,KAAK,SAASsB,GACtED,EAASC,MAIjB3D,EAAEG,OAAOyD,eAAiB,SAASF,GAC/B1D,EAAEU,GAAGW,MAAM,YAAY0B,UAAUV,KAAK,SAASsB,GAC3CD,EAASC,MAIjB3D,EAAE6D,KAAKC,QAAU,SAASJ,GACtB1D,EAAEU,GAAGW,MAAM,QAAQ0B,UAAUV,KAAK,SAASsB,GACvCD,EAASC","file":"etsy_db.min.js","sourcesContent":["$(document).ready(function() {\n    $.etsyDB = {};\n    $.etsyDB.init = function() {\n        Dexie.getDatabaseNames(function(databases) {\n            if (databases.indexOf('etsyDB') == -1) $.createDB();\n            else $.db.open();\n        });\n    };\n\n    $.etsyDB.create = function() {\n        $.db.version(1).stores(\n            {\n                products: '++id, bin_id, listing_id, title, categories, price, created, original_created',\n                bins: '++id, name, notes'\n            }\n        );\n        console.log(\"Created database\");\n        $.db.open();\n    };\n\n    $.etsyDB.addListing = function(listing) {\n        $.db.table('products').where(\"listing_id\").equals(listing.listing_id).count(function(count) {\n            if (count === 0) {\n                $.db.table('products').add({\n                    bin_id: -1,\n                    listing_id: listing.listing_id,\n                    title: listing.title,\n                    categories: listing.category_path.toString(),\n                    price: listing.price,\n                    created: listing.creation_tsz,\n                    original_creation: listing.original_creation_tsz\n                }).then(function() {\n                    console.log(\"Added listing #\" + listing.listing_id);\n                });\n            } else {\n                //console.log(\"Attempted to add duplicate listing #\" + listing.listing_id + ' - ' + listing.title);\n            }\n        });\n    };\n\n    $.etsyDB.listTables = function() {\n        $.db.tables.forEach(function (table, i) {\n            console.log('Table ' + i + \": \" + table.name);\n        });\n    };\n\n    $.etsyDB.deleteDB = function() {\n        $.db.delete().then(function() {\n            console.log('Deleted database');\n        });\n    };\n\n    $.etsyDB.export = function() {\n        return $.db.transaction('r', $.db.tables, function() {\n            // Map to transaction-bound table instances because instances in $.db.tables are not bound\n            // to current transaction by default (may change in future versions of Dexie)\n            var tables = $.db.tables.map(function (t) {\n                return Dexie.currentTransaction.tables[t.name];\n            });\n            // Prepare a result: An array of {tableName: \"name\", contents: [objects...]}\n            var result = [];\n            // Recursively export each table:\n            return exportNextTable ();\n\n            function exportNextTable () {\n                var table = tables.shift();\n                return table.toArray().then(function(a) {\n                    result.push({\n                        tableName: table.name,\n                        contents: a\n                    });\n                    return tables.length > 0 ?\n                        exportNextTable() :\n                        result;\n                });\n            }\n        });\n    };\n\n    $.etsyDB.getNewProducts = function(callback) {\n        $.db.table('products').where(\"bin_id\").equals(-1).toArray().then(function(data) {\n            callback(data);\n        });\n    };\n\n    $.etsyDB.getAllProducts = function(callback) {\n        $.db.table('products').toArray().then(function(data) {\n            callback(data);\n        });\n    };\n\n    $.etsy.getBins = function(callback) {\n        $.db.table('bins').toArray().then(function(data) {\n            callback(data);\n        });\n    };\n});\n"],"sourceRoot":"/source/"}